<?xml version="1.0" encoding="UTF-8"?>
<CustomObject xmlns="http://soap.sforce.com/2006/04/metadata">
    <customSettingsType>List</customSettingsType>
    <customSettingsVisibility>Public</customSettingsVisibility>
    <description>This is the custom settings that consumed by Common Scheduler, which runs every 5 minutes.</description>
    <enableFeeds>false</enableFeeds>
    <fields>
        <fullName>Abort_After_Mins__c</fullName>
        <externalId>false</externalId>
        <inlineHelpText>This is number of minutes, after which the running instances of this job will be aborted. This is to ensure we clear up any stuck jobs for whatever reason. If time is 0 or less, then jobs will not be aborted.</inlineHelpText>
        <label>Abort After Mins</label>
        <precision>18</precision>
        <required>false</required>
        <scale>0</scale>
        <trackTrending>false</trackTrending>
        <type>Number</type>
        <unique>false</unique>
    </fields>
    <fields>
        <fullName>Batch_Job_Scope__c</fullName>
        <defaultValue>1</defaultValue>
        <externalId>false</externalId>
        <inlineHelpText>This the batch size scope that indicate how many records will be passed to batch.execute() method. Default is 25 records. More info here (http://www.salesforce.com/us/developer/docs/apexcode/Content/apex_batch_interface.htm)</inlineHelpText>
        <label>Batch Job Scope</label>
        <precision>18</precision>
        <required>false</required>
        <scale>0</scale>
        <trackTrending>false</trackTrending>
        <type>Number</type>
        <unique>false</unique>
    </fields>
    <fields>
        <fullName>Class__c</fullName>
        <externalId>false</externalId>
        <inlineHelpText>Apex classes can be 40 chars but Name in custom settings can only be 38 chars. So if we want to schedule a class which is more than 38 chars, we can use this field to specify the class. In such cases, schedule will use this value as class instead of name.</inlineHelpText>
        <label>Class</label>
        <length>255</length>
        <required>false</required>
        <trackTrending>false</trackTrending>
        <type>Text</type>
        <unique>false</unique>
    </fields>
    <fields>
        <fullName>Cron_Trigger__c</fullName>
        <externalId>false</externalId>
        <inlineHelpText>String in the cron format. Format is Seconds Minutes Hours Day_of_month Month Day_of_week optional_year. Seconds is not applicable. Minutes, Hours, and other can be specified multiple using *  ? - and ,. See this more info. http://sforce.co/1LsXYAP</inlineHelpText>
        <label>Cron Trigger</label>
        <length>255</length>
        <required>false</required>
        <trackTrending>false</trackTrending>
        <type>Text</type>
        <unique>false</unique>
    </fields>
    <fields>
        <fullName>Data1__c</fullName>
        <externalId>false</externalId>
        <inlineHelpText>Any arbitrary string data that can be specified. All Data values (Data1 through Data5) will be concatenated and  set to the Job via CommonSchedulable.setData method. If Batch or Queueable, doesn&apos;t implement CommonSchedulable, then data will not be set.</inlineHelpText>
        <label>Data1</label>
        <required>false</required>
        <trackTrending>false</trackTrending>
        <type>TextArea</type>
    </fields>
    <fields>
        <fullName>Data2__c</fullName>
        <externalId>false</externalId>
        <label>Data2</label>
        <required>false</required>
        <trackTrending>false</trackTrending>
        <type>TextArea</type>
    </fields>
    <fields>
        <fullName>Data3__c</fullName>
        <externalId>false</externalId>
        <label>Data3</label>
        <required>false</required>
        <trackTrending>false</trackTrending>
        <type>TextArea</type>
    </fields>
    <fields>
        <fullName>Data4__c</fullName>
        <externalId>false</externalId>
        <label>Data4</label>
        <required>false</required>
        <trackTrending>false</trackTrending>
        <type>TextArea</type>
    </fields>
    <fields>
        <fullName>Data5__c</fullName>
        <externalId>false</externalId>
        <label>Data5</label>
        <required>false</required>
        <trackTrending>false</trackTrending>
        <type>TextArea</type>
    </fields>
    <fields>
        <fullName>Delay_Until_Time__c</fullName>
        <externalId>false</externalId>
        <label>Delay Until Time</label>
        <required>false</required>
        <trackTrending>false</trackTrending>
        <type>DateTime</type>
    </fields>
    <fields>
        <fullName>Description__c</fullName>
        <externalId>false</externalId>
        <inlineHelpText>Any information/notes/comments that would help understand the job and what it does and how often it is supposed to run.</inlineHelpText>
        <label>Description</label>
        <required>false</required>
        <trackTrending>false</trackTrending>
        <type>TextArea</type>
    </fields>
    <fields>
        <fullName>Eligible_To_Run__c</fullName>
        <defaultValue>false</defaultValue>
        <externalId>false</externalId>
        <inlineHelpText>Some times jobs are not executed because previously started job is still running. But based on the time, it is eligible to run. In such cases, this flag will be marked yes. If so, engine will try to run as soon as previously started job is completed.</inlineHelpText>
        <label>Eligible To Run</label>
        <trackTrending>false</trackTrending>
        <type>Checkbox</type>
    </fields>
    <fields>
        <fullName>Enabled__c</fullName>
        <defaultValue>false</defaultValue>
        <externalId>false</externalId>
        <inlineHelpText>Status of the Batch Job. If not enabled, then Common Scheduler will not run this.</inlineHelpText>
        <label>Enabled</label>
        <trackTrending>false</trackTrending>
        <type>Checkbox</type>
    </fields>
    <fields>
        <fullName>Last_Run_Time__c</fullName>
        <externalId>false</externalId>
        <inlineHelpText>DateTime when this batch job was last run. If it is disabled, then it will not be run until it is enabled.</inlineHelpText>
        <label>Last Run Time</label>
        <required>false</required>
        <trackTrending>false</trackTrending>
        <type>DateTime</type>
    </fields>
    <fields>
        <fullName>Message__c</fullName>
        <externalId>false</externalId>
        <inlineHelpText>Any message associated with running the job.</inlineHelpText>
        <label>Message</label>
        <required>false</required>
        <trackTrending>false</trackTrending>
        <type>TextArea</type>
    </fields>
    <fields>
        <fullName>Parameters__c</fullName>
        <externalId>false</externalId>
        <inlineHelpText>This is set of config parameters that can be passed to jobs. This works if the job implemented CommonSchedulable interface. Format is comma separated list of key value pairs. For ex., foo=bar,bob=alice. Scheduler will call setParameter method for these.</inlineHelpText>
        <label>Parameters</label>
        <length>255</length>
        <required>false</required>
        <trackTrending>false</trackTrending>
        <type>Text</type>
        <unique>false</unique>
    </fields>
    <fields>
        <fullName>Run_Frequency__c</fullName>
        <externalId>false</externalId>
        <inlineHelpText>Indicates the run frequency. Must be one of Every Min, Every 5 Mins, Every 15 Mins, Every 30 Mins, Every Hour, Every 6 Hrs, Every 12 Hrs, Every Day or Cron. Values are case insensitive. If value doesn&apos;t match one of these, it will be errored out.</inlineHelpText>
        <label>Run Frequency</label>
        <length>255</length>
        <required>false</required>
        <trackTrending>false</trackTrending>
        <type>Text</type>
        <unique>false</unique>
    </fields>
    <label>Common Scheduler</label>
</CustomObject>
