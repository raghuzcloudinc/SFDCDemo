//Generated by wsdl2apex

public class SmartTurn_OccamService {
    public class OccamService {
        public String endpoint_x = Label.SmartTurn; //'https://stdemo.smartturn.com/occam/services/OccamService';
        //public String endpoint_x = 'https://services.smartturn.com/occam/services/OccamService';
        public Map<String,String> inputHttpHeaders_x;
        public Map<String,String> outputHttpHeaders_x;
        public String clientCertName_x;
        public String clientCert_x;
        public String clientCertPasswd_x;
        public Integer timeout_x;
        private String[] ns_map_type_info = new String[]{'http://www.smartturn.com/services/shipmenttype', 'SmartTurn_ShipmentType', 'http://www.smartturn.com/services/OccamService/bin-transfer', 'SmartTurn_BinTransfer', 'http://www.smartturn.com/services/pick-ticket-types', 'SmartTurn_PickTicketTypes', 'http://www.smartturn.com/services/OccamService/adjustment', 'SmartTurn_Adjustment', 'http://www.smartturn.com/services/data-types', 'SmartTurn_DataTypes', 'http://www.smartturn.com/services/location-types', 'SmartTurn_LocationTypes', 'http://www.smartturn.com/services/flex-field-types', 'SmartTurn_FlexFieldTypes', 'http://www.smartturn.com/services/OccamService/item-master-atp', 'SmartTurn_ItemMasterATP', 'http://www.smartturn.com/services/OccamService/bol', 'SmartTurn_BOL', 'http://www.smartturn.com/services/OccamService/cyclecount', 'SmartTurn_CycleCount', 'http://www.smartturn.com/services/OccamService/shipment', 'SmartTurn_Shipment', 'http://www.smartturn.com/services/OccamService/inventory-item', 'SmartTurn_InventoryItem', 'http://www.smartturn.com/services/lookup-types', 'SmartTurn_LookupTypes', 'http://www.smartturn.com/services/inventory-item-types', 'SmartTurn_InventoryItemTypes', 'http://www.smartturn.com/services/cycle-count-types', 'SmartTurn_CycleCountTypes', 'http://www.smartturn.com/services/OccamService/billing', 'SmartTurn_Billing', 'http://www.smartturn.com/services/activity-line-types', 'SmartTurn_ActivityLineTypes', 'http://www.smartturn.com/services/OccamService', 'SmartTurn_OccamService', 'http://www.smartturn.com/services/OccamService/storage-documents', 'SmartTurn_StorageDocuments', 'http://www.smartturn.com/services/OccamService/ba', 'SmartTurn_BusinessAffiliate', 'http://www.smartturn.com/services/receipt-types', 'SmartTurn_ReceiptTypes', 'http://www.smartturn.com/services/sales-order-types', 'SmartTurn_SalesOrderTypes', 'http://www.smartturn.com/services/OccamService/voided-items', 'SmartTurn_VoidedItems', 'http://www.smartturn.com/services/OccamService/activity-lines', 'SmartTurn_ActivityLines', 'http://www.smartturn.com/services/OccamService/item-master', 'SmartTurn_ItemMaster', 'http://www.smartturn.com/services/voided-item-types', 'SmartTurn_VoidedItemTypes', 'http://www.smartturn.com/services/OccamService/document', 'SmartTurn_Document', 'http://www.smartturn.com/services/ba-types', 'SmartTurn_BATypes', 'http://www.smartturn.com/services/item-master-atp-types', 'SmartTurn_ItemMasterATPTypes', 'http://www.smartturn.com/services/bin-transfer-types', 'SmartTurn_BinTransferTypes', 'http://www.smartturn.com/services/OccamService/sales-order', 'SmartTurn_SalesOrder', 'http://www.smartturn.com/services/OccamService/authenticate', 'SmartTurn_Authenticate', 'http://www.smartturn.com/services/billing-item-types', 'SmartTurn_BillingItemTypes', 'http://www.smartturn.com/services/OccamService/purchase-order', 'SmartTurn_PurchaseOrder', 'http://www.smartturn.com/services/purchase-order-types', 'SmartTurn_PurchaseOrderTypes', 'http://www.smartturn.com/services/storage-document-types', 'SmartTurn_StorageDocumentTypes', 'http://www.smartturn.com/services/OccamService/location', 'SmartTurn_Location', 'http://www.smartturn.com/services/OccamService/receipt', 'SmartTurn_Receipt', 'http://www.smartturn.com/services/bol-types', 'SmartTurn_BolTypes', 'http://www.smartturn.com/services/adjustment-types', 'SmartTurn_AdjustmentTypes', 'http://www.smartturn.com/services/item-master-types', 'SmartTurn_ItemMasterTypes', 'http://www.smartturn.com/services/OccamService/pick-ticket', 'SmartTurn_PickTicket', 'http://www.smartturn.com/services/occamtypes', 'SmartTurn_OccamTypes'};
/*        public SmartTurn_OccamTypes.UploadResponse[] consumeDocuments(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_OccamTypes.WSDocumentIdentificationWithType[] documentIdentification) {
            SmartTurn_Document.consumeDocuments_element request_x = new SmartTurn_Document.consumeDocuments_element();
            SmartTurn_Document.consumeDocumentsResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.documentIdentification = documentIdentification;
            Map<String, SmartTurn_Document.consumeDocumentsResponse_element> response_map_x = new Map<String, SmartTurn_Document.consumeDocumentsResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/document',
              'consumeDocuments',
              'http://www.smartturn.com/services/OccamService/document',
              'consumeDocumentsResponse',
              'SmartTurn_Document.consumeDocumentsResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.uploadResponse;
        }
        public SmartTurn_OccamTypes.UploadResponse[] overwritePurchaseOrder(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_PurchaseOrderTypes.PurchaseOrder[] inPurchaseOrders) {
            SmartTurn_PurchaseOrder.overwritePurchaseOrder_element request_x = new SmartTurn_PurchaseOrder.overwritePurchaseOrder_element();
            SmartTurn_PurchaseOrder.overwritePurchaseOrderResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.inPurchaseOrders = inPurchaseOrders;
            Map<String, SmartTurn_PurchaseOrder.overwritePurchaseOrderResponse_element> response_map_x = new Map<String, SmartTurn_PurchaseOrder.overwritePurchaseOrderResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/purchase-order',
              'overwritePurchaseOrder',
              'http://www.smartturn.com/services/OccamService/purchase-order',
              'overwritePurchaseOrderResponse',
              'SmartTurn_PurchaseOrder.overwritePurchaseOrderResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.uploadResponse;
        }
        public SmartTurn_LookupTypes.WSLocationLookupResult lookUpLocations(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_OccamTypes.Criteria inCriteria) {
            SmartTurn_Location.lookUpLocation_element request_x = new SmartTurn_Location.lookUpLocation_element();
            SmartTurn_Location.lookUpLocationResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.inCriteria = inCriteria;
            Map<String, SmartTurn_Location.lookUpLocationResponse_element> response_map_x = new Map<String, SmartTurn_Location.lookUpLocationResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/location',
              'lookUpLocation',
              'http://www.smartturn.com/services/OccamService/location',
              'lookUpLocationResponse',
              'SmartTurn_Location.lookUpLocationResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.result;
        }
        public SmartTurn_OccamTypes.UploadResponse[] setBOLCustomFields(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_BolTypes.WSBOLCustomFields[] bol) {
            SmartTurn_BOL.setBOLCustomFields_element request_x = new SmartTurn_BOL.setBOLCustomFields_element();
            SmartTurn_BOL.setBOLCustomFieldsResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.bol = bol;
            Map<String, SmartTurn_BOL.setBOLCustomFieldsResponse_element> response_map_x = new Map<String, SmartTurn_BOL.setBOLCustomFieldsResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/bol',
              'setBOLCustomFields',
              'http://www.smartturn.com/services/OccamService/bol',
              'setBOLCustomFieldsResponse',
              'SmartTurn_BOL.setBOLCustomFieldsResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.uploadResponse;
        }
        public SmartTurn_LookupTypes.WSPurchaseOrderLookupResult lookUpPurchaseOrders(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_OccamTypes.Criteria inCriteria) {
            SmartTurn_PurchaseOrder.lookUpPurchaseOrder_element request_x = new SmartTurn_PurchaseOrder.lookUpPurchaseOrder_element();
            SmartTurn_PurchaseOrder.lookUpPurchaseOrderResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.inCriteria = inCriteria;
            Map<String, SmartTurn_PurchaseOrder.lookUpPurchaseOrderResponse_element> response_map_x = new Map<String, SmartTurn_PurchaseOrder.lookUpPurchaseOrderResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/purchase-order',
              'lookUpPurchaseOrder',
              'http://www.smartturn.com/services/OccamService/purchase-order',
              'lookUpPurchaseOrderResponse',
              'SmartTurn_PurchaseOrder.lookUpPurchaseOrderResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.result;
        }
        public SmartTurn_LookupTypes.WSItemMasterAtpLookupResult lookUpItemMasterAtp(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_OccamTypes.Criteria inCriteria) {
            SmartTurn_ItemMasterATP.lookUpItemMasterAtp_element request_x = new SmartTurn_ItemMasterATP.lookUpItemMasterAtp_element();
            SmartTurn_ItemMasterATP.lookUpItemMasterAtpResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.inCriteria = inCriteria;
            Map<String, SmartTurn_ItemMasterATP.lookUpItemMasterAtpResponse_element> response_map_x = new Map<String, SmartTurn_ItemMasterATP.lookUpItemMasterAtpResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/item-master-atp',
              'lookUpItemMasterAtp',
              'http://www.smartturn.com/services/OccamService/item-master-atp',
              'lookUpItemMasterAtpResponse',
              'SmartTurn_ItemMasterATP.lookUpItemMasterAtpResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.result;
        }
        public SmartTurn_StorageDocumentTypes.CreateStorageDocumentsResponse createStorageDocuments(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,String warehouseName,String inventoryManagerName) {
            SmartTurn_StorageDocuments.createStorageDocuments_element request_x = new SmartTurn_StorageDocuments.createStorageDocuments_element();
            SmartTurn_StorageDocuments.createStorageDocumentsResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.warehouseName = warehouseName;
            request_x.inventoryManagerName = inventoryManagerName;
            Map<String, SmartTurn_StorageDocuments.createStorageDocumentsResponse_element> response_map_x = new Map<String, SmartTurn_StorageDocuments.createStorageDocumentsResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/storage-documents',
              'createStorageDocuments',
              'http://www.smartturn.com/services/OccamService/storage-documents',
              'createStorageDocumentsResponse',
              'SmartTurn_StorageDocuments.createStorageDocumentsResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.response;
        }
        public SmartTurn_LookupTypes.WSBinTransferLookupResult lookUpBinTransfers(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_OccamTypes.Criteria inCriteria) {
            SmartTurn_BinTransfer.lookUpBinTransfer_element request_x = new SmartTurn_BinTransfer.lookUpBinTransfer_element();
            SmartTurn_BinTransfer.lookUpBinTransferResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.inCriteria = inCriteria;
            Map<String, SmartTurn_BinTransfer.lookUpBinTransferResponse_element> response_map_x = new Map<String, SmartTurn_BinTransfer.lookUpBinTransferResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/bin-transfer',
              'lookUpBinTransfer',
              'http://www.smartturn.com/services/OccamService/bin-transfer',
              'lookUpBinTransferResponse',
              'SmartTurn_BinTransfer.lookUpBinTransferResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.result;
        }
        public SmartTurn_LookupTypes.WSBillingItemsLookupResult lookUpBillingItems(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_OccamTypes.Criteria inCriteria) {
            SmartTurn_Billing.lookUpBillingItems_element request_x = new SmartTurn_Billing.lookUpBillingItems_element();
            SmartTurn_Billing.lookUpBillingItemsResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.inCriteria = inCriteria;
            Map<String, SmartTurn_Billing.lookUpBillingItemsResponse_element> response_map_x = new Map<String, SmartTurn_Billing.lookUpBillingItemsResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/billing',
              'lookUpBillingItems',
              'http://www.smartturn.com/services/OccamService/billing',
              'lookUpBillingItemsResponse',
              'SmartTurn_Billing.lookUpBillingItemsResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.result;
        }
        public SmartTurn_OccamTypes.UploadResponse[] updateParcelPostInfo(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_ShipmentType.WSParcelPostInfo[] inParcelPostInfo) {
            SmartTurn_Shipment.updateParcelPostInfo_element request_x = new SmartTurn_Shipment.updateParcelPostInfo_element();
            SmartTurn_Shipment.updateParcelPostInfoResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.inParcelPostInfo = inParcelPostInfo;
            Map<String, SmartTurn_Shipment.updateParcelPostInfoResponse_element> response_map_x = new Map<String, SmartTurn_Shipment.updateParcelPostInfoResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/shipment',
              'updateParcelPostInfo',
              'http://www.smartturn.com/services/OccamService/shipment',
              'updateParcelPostInfoResponse',
              'SmartTurn_Shipment.updateParcelPostInfoResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.uploadResponse;
        }
        public SmartTurn_LookupTypes.ReceiptLookupResult lookUpReceipts(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_OccamTypes.Criteria inCriteria) {
            SmartTurn_Receipt.lookupReceipts_element request_x = new SmartTurn_Receipt.lookupReceipts_element();
            SmartTurn_Receipt.lookupReceiptsResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.inCriteria = inCriteria;
            Map<String, SmartTurn_Receipt.lookupReceiptsResponse_element> response_map_x = new Map<String, SmartTurn_Receipt.lookupReceiptsResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/receipt',
              'lookupReceipts',
              'http://www.smartturn.com/services/OccamService/receipt',
              'lookupReceiptsResponse',
              'SmartTurn_Receipt.lookupReceiptsResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.result;
        } */
        
        public SmartTurn_OccamTypes.UploadResponse[] overwriteSalesOrder(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_SalesOrderTypes.SalesOrder[] inSalesOrders) {
            SmartTurn_SalesOrder.overwriteSalesOrder_element request_x = new SmartTurn_SalesOrder.overwriteSalesOrder_element();
            SmartTurn_SalesOrder.overwriteSalesOrderResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.inSalesOrders = inSalesOrders;
            Map<String, SmartTurn_SalesOrder.overwriteSalesOrderResponse_element> response_map_x = new Map<String, SmartTurn_SalesOrder.overwriteSalesOrderResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/sales-order',
              'overwriteSalesOrder',
              'http://www.smartturn.com/services/OccamService/sales-order',
              'overwriteSalesOrderResponse',
              'SmartTurn_SalesOrder.overwriteSalesOrderResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.uploadResponse;
        }


        //the following workaround to return overwriteSalesOrderReturn is commented on 3/27/12...since SmartTurn started to send the uploadResponse element
/*  
        public SmartTurn_OccamTypes.UploadResponse[] overwriteSalesOrder(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_SalesOrderTypes.SalesOrder[] inSalesOrders) {
            SmartTurn_SalesOrder.overwriteSalesOrder_element request_x = new SmartTurn_SalesOrder.overwriteSalesOrder_element();
            SmartTurn_SalesOrder.overwriteSalesOrderResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.inSalesOrders = inSalesOrders;
            Map<String, SmartTurn_SalesOrder.overwriteSalesOrderResponse_element> response_map_x = new Map<String, SmartTurn_SalesOrder.overwriteSalesOrderResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/sales-order',
              'overwriteSalesOrder',
              'http://www.smartturn.com/services/OccamService/sales-order',
              'overwriteSalesOrderResponse',
              'SmartTurn_SalesOrder.overwriteSalesOrderResponse_element'}
            );
            System.debug('\n\n*** overwriteSORequest '  + request_x + '***\n\n');
            response_x = response_map_x.get('response_x');
            return response_x.overwriteSalesOrderReturn;
        }
*/
        
/*        
        public SmartTurn_LookupTypes.ShipmentLookupResult lookUpShipments(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_OccamTypes.Criteria inCriteria) {
            SmartTurn_Shipment.lookupShipments_element request_x = new SmartTurn_Shipment.lookupShipments_element();
            SmartTurn_Shipment.lookupShipmentsResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.inCriteria = inCriteria;
            Map<String, SmartTurn_Shipment.lookupShipmentsResponse_element> response_map_x = new Map<String, SmartTurn_Shipment.lookupShipmentsResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/shipment',
              'lookupShipments',
              'http://www.smartturn.com/services/OccamService/shipment',
              'lookupShipmentsResponse',
              'SmartTurn_Shipment.lookupShipmentsResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.result;
        }
        public SmartTurn_LookupTypes.ItemMasterLookupResult lookUpItemMaster(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_OccamTypes.Criteria inCriteria) {
            SmartTurn_ItemMaster.lookUpItemMaster_element request_x = new SmartTurn_ItemMaster.lookUpItemMaster_element();
            SmartTurn_ItemMaster.lookUpItemMasterResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.inCriteria = inCriteria;
            Map<String, SmartTurn_ItemMaster.lookUpItemMasterResponse_element> response_map_x = new Map<String, SmartTurn_ItemMaster.lookUpItemMasterResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/item-master',
              'lookUpItemMaster',
              'http://www.smartturn.com/services/OccamService/item-master',
              'lookUpItemMasterResponse',
              'SmartTurn_ItemMaster.lookUpItemMasterResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.result;
        }
        public SmartTurn_ReceiptTypes.Receipt[] getReceipts(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_OccamTypes.Criteria inCriteria) {
            SmartTurn_Receipt.getReceipts_element request_x = new SmartTurn_Receipt.getReceipts_element();
            SmartTurn_Receipt.getReceiptsResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.inCriteria = inCriteria;
            Map<String, SmartTurn_Receipt.getReceiptsResponse_element> response_map_x = new Map<String, SmartTurn_Receipt.getReceiptsResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/receipt',
              'getReceipts',
              'http://www.smartturn.com/services/OccamService/receipt',
              'getReceiptsResponse',
              'SmartTurn_Receipt.getReceiptsResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.receipts;
        }
        public SmartTurn_OccamTypes.UploadResponse[] shipClosedBOLPackages(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_OccamTypes.WSDocumentIdentification[] bolIdentification) {
            SmartTurn_BOL.shipClosedBOLPackages_element request_x = new SmartTurn_BOL.shipClosedBOLPackages_element();
            SmartTurn_BOL.shipClosedBOLPackagesResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.bolIdentification = bolIdentification;
            Map<String, SmartTurn_BOL.shipClosedBOLPackagesResponse_element> response_map_x = new Map<String, SmartTurn_BOL.shipClosedBOLPackagesResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/bol',
              'shipClosedBOLPackages',
              'http://www.smartturn.com/services/OccamService/bol',
              'shipClosedBOLPackagesResponse',
              'SmartTurn_BOL.shipClosedBOLPackagesResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.uploadResponse;
        }
        public SmartTurn_OccamTypes.UploadResponse[] closeDocuments(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_OccamTypes.WSDocumentIdentificationWithType[] documentIdentification) {
            SmartTurn_Document.closeDocuments_element request_x = new SmartTurn_Document.closeDocuments_element();
            SmartTurn_Document.closeDocumentsResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.documentIdentification = documentIdentification;
            Map<String, SmartTurn_Document.closeDocumentsResponse_element> response_map_x = new Map<String, SmartTurn_Document.closeDocumentsResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/document',
              'closeDocuments',
              'http://www.smartturn.com/services/OccamService/document',
              'closeDocumentsResponse',
              'SmartTurn_Document.closeDocumentsResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.uploadResponse;
        }
        public SmartTurn_OccamTypes.UploadResponse[] commitDocuments(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_OccamTypes.WSDocumentIdentificationWithType[] documentIdentification) {
            SmartTurn_Document.commitDocuments_element request_x = new SmartTurn_Document.commitDocuments_element();
            SmartTurn_Document.commitDocumentsResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.documentIdentification = documentIdentification;
            Map<String, SmartTurn_Document.commitDocumentsResponse_element> response_map_x = new Map<String, SmartTurn_Document.commitDocumentsResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/document',
              'commitDocuments',
              'http://www.smartturn.com/services/OccamService/document',
              'commitDocumentsResponse',
              'SmartTurn_Document.commitDocumentsResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.uploadResponse;
        } */
/*        public SmartTurn_LookupTypes.WSSalesOrderLookupResult lookUpSalesOrders(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_OccamTypes.Criteria inCriteria) {
            SmartTurn_SalesOrder.lookUpSalesOrder_element request_x = new SmartTurn_SalesOrder.lookUpSalesOrder_element();
            SmartTurn_SalesOrder.lookUpSalesOrderResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.inCriteria = inCriteria;
            Map<String, SmartTurn_SalesOrder.lookUpSalesOrderResponse_element> response_map_x = new Map<String, SmartTurn_SalesOrder.lookUpSalesOrderResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/sales-order',
              'lookUpSalesOrder',
              'http://www.smartturn.com/services/OccamService/sales-order',
              'lookUpSalesOrderResponse',
              'SmartTurn_SalesOrder.lookUpSalesOrderResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.result;
        }*/
/*        public SmartTurn_LookupTypes.WSPickTicketLookupResult lookUpPickTickets(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_OccamTypes.Criteria inCriteria) {
            SmartTurn_PickTicket.lookupPickTickets_element request_x = new SmartTurn_PickTicket.lookupPickTickets_element();
            SmartTurn_PickTicket.lookupPickTicketsResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.inCriteria = inCriteria;
            Map<String, SmartTurn_PickTicket.lookupPickTicketsResponse_element> response_map_x = new Map<String, SmartTurn_PickTicket.lookupPickTicketsResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/pick-ticket',
              'lookupPickTickets',
              'http://www.smartturn.com/services/OccamService/pick-ticket',
              'lookupPickTicketsResponse',
              'SmartTurn_PickTicket.lookupPickTicketsResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.result;
        }
        public SmartTurn_OccamTypes.UploadResponse cancelSalesOrder(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,String externalNumber,String number_x) {
            SmartTurn_SalesOrder.cancelSalesOrder_element request_x = new SmartTurn_SalesOrder.cancelSalesOrder_element();
            SmartTurn_SalesOrder.cancelSalesOrderResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.externalNumber = externalNumber;
            request_x.number_x = number_x;
            Map<String, SmartTurn_SalesOrder.cancelSalesOrderResponse_element> response_map_x = new Map<String, SmartTurn_SalesOrder.cancelSalesOrderResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/sales-order',
              'cancelSalesOrder',
              'http://www.smartturn.com/services/OccamService/sales-order',
              'cancelSalesOrderResponse',
              'SmartTurn_SalesOrder.cancelSalesOrderResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.uploadResponse;
        }
        public SmartTurn_ShipmentType.Shipment[] getShipments(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_OccamTypes.Criteria inCriteria) {
            SmartTurn_Shipment.getShipments_element request_x = new SmartTurn_Shipment.getShipments_element();
            SmartTurn_Shipment.getShipmentsResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.inCriteria = inCriteria;
            Map<String, SmartTurn_Shipment.getShipmentsResponse_element> response_map_x = new Map<String, SmartTurn_Shipment.getShipmentsResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/shipment',
              'getShipments',
              'http://www.smartturn.com/services/OccamService/shipment',
              'getShipmentsResponse',
              'SmartTurn_Shipment.getShipmentsResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.shipments;
        }
        public SmartTurn_LookupTypes.WSBusinessAffiliateLookupResult lookUpBusinessAffiliates(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_OccamTypes.Criteria inCriteria) {
            SmartTurn_BusinessAffiliate.lookUpBusinessAffiliates_element request_x = new SmartTurn_BusinessAffiliate.lookUpBusinessAffiliates_element();
            SmartTurn_BusinessAffiliate.lookUpBusinessAffiliatesResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.inCriteria = inCriteria;
            Map<String, SmartTurn_BusinessAffiliate.lookUpBusinessAffiliatesResponse_element> response_map_x = new Map<String, SmartTurn_BusinessAffiliate.lookUpBusinessAffiliatesResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/ba',
              'lookUpBusinessAffiliates',
              'http://www.smartturn.com/services/OccamService/ba',
              'lookUpBusinessAffiliatesResponse',
              'SmartTurn_BusinessAffiliate.lookUpBusinessAffiliatesResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.result;
        }
        public SmartTurn_OccamTypes.UploadResponse[] saveItemMaster(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_ItemMasterTypes.ItemMaster[] inItemMasters) {
            SmartTurn_ItemMaster.saveItemMaster_element request_x = new SmartTurn_ItemMaster.saveItemMaster_element();
            SmartTurn_ItemMaster.saveItemMasterResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.inItemMasters = inItemMasters;
            Map<String, SmartTurn_ItemMaster.saveItemMasterResponse_element> response_map_x = new Map<String, SmartTurn_ItemMaster.saveItemMasterResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/item-master',
              'saveItemMaster',
              'http://www.smartturn.com/services/OccamService/item-master',
              'saveItemMasterResponse',
              'SmartTurn_ItemMaster.saveItemMasterResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.uploadResponse;
        } */
        public SmartTurn_OccamTypes.UploadResponse[] saveSalesOrder(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_SalesOrderTypes.SalesOrder[] inSalesOrders) {
            SmartTurn_SalesOrder.saveSalesOrder_element request_x = new SmartTurn_SalesOrder.saveSalesOrder_element();
            SmartTurn_SalesOrder.saveSalesOrderResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.inSalesOrders = inSalesOrders;
            
            System.debug('\n\n*** request_x '  + request_x + '***\n\n');
            
            Map<String, SmartTurn_SalesOrder.saveSalesOrderResponse_element> response_map_x = new Map<String, SmartTurn_SalesOrder.saveSalesOrderResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/sales-order',
              'saveSalesOrder',
              'http://www.smartturn.com/services/OccamService/sales-order',
              'saveSalesOrderResponse',
              'SmartTurn_SalesOrder.saveSalesOrderResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.uploadResponse;
        }
/*        public SmartTurn_OccamTypes.UploadResponse[] updateBOLPkgAttributes(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_BolTypes.WSBOLForPackageUpdate[] bol) {
            SmartTurn_BOL.updateBOLPkgAttributes_element request_x = new SmartTurn_BOL.updateBOLPkgAttributes_element();
            SmartTurn_BOL.updateBOLPkgAttributesResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.bol = bol;
            Map<String, SmartTurn_BOL.updateBOLPkgAttributesResponse_element> response_map_x = new Map<String, SmartTurn_BOL.updateBOLPkgAttributesResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/bol',
              'updateBOLPkgAttributes',
              'http://www.smartturn.com/services/OccamService/bol',
              'updateBOLPkgAttributesResponse',
              'SmartTurn_BOL.updateBOLPkgAttributesResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.uploadResponse;
        }
        public SmartTurn_LookupTypes.CycleCountsLookupResult lookUpCycleCounts(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_OccamTypes.Criteria inCriteria) {
            SmartTurn_CycleCount.lookUpCycleCounts_element request_x = new SmartTurn_CycleCount.lookUpCycleCounts_element();
            SmartTurn_CycleCount.lookUpCycleCountsResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.inCriteria = inCriteria;
            Map<String, SmartTurn_CycleCount.lookUpCycleCountsResponse_element> response_map_x = new Map<String, SmartTurn_CycleCount.lookUpCycleCountsResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/cyclecount',
              'lookUpCycleCounts',
              'http://www.smartturn.com/services/OccamService/cyclecount',
              'lookUpCycleCountsResponse',
              'SmartTurn_CycleCount.lookUpCycleCountsResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.result;
        } */
/*        public SmartTurn_LookupTypes.WSAuthenticationResult authenticateAndGetTenantName(SmartTurn_OccamTypes.OccamPasswordCredential inCredential) {
            SmartTurn_Authenticate.authenticateAndGetTenantName_element request_x = new SmartTurn_Authenticate.authenticateAndGetTenantName_element();
            SmartTurn_Authenticate.authenticateAndGetTenantNameResponse_element response_x;
            request_x.inCredential = inCredential;
            Map<String, SmartTurn_Authenticate.authenticateAndGetTenantNameResponse_element> response_map_x = new Map<String, SmartTurn_Authenticate.authenticateAndGetTenantNameResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/authenticate',
              'authenticateAndGetTenantName',
              'http://www.smartturn.com/services/OccamService/authenticate',
              'authenticateAndGetTenantNameResponse',
              'SmartTurn_Authenticate.authenticateAndGetTenantNameResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.result;
        }
        public String authenticate(SmartTurn_OccamTypes.OccamPasswordCredential inCredential) {
            SmartTurn_Authenticate.authenticate_element request_x = new SmartTurn_Authenticate.authenticate_element();
            SmartTurn_Authenticate.authenticateResponse_element response_x;
            request_x.inCredential = inCredential;
            Map<String, SmartTurn_Authenticate.authenticateResponse_element> response_map_x = new Map<String, SmartTurn_Authenticate.authenticateResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/authenticate',
              'authenticate',
              'http://www.smartturn.com/services/OccamService/authenticate',
              'authenticateResponse',
              'SmartTurn_Authenticate.authenticateResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.response;
        }*/
        public SmartTurn_LookupTypes.InventoryLookupResult lookUpInventory(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_OccamTypes.Criteria inCriteria) {
            SmartTurn_InventoryItem.lookUpInventory_element request_x = new SmartTurn_InventoryItem.lookUpInventory_element();
            SmartTurn_InventoryItem.lookUpInventoryResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.inCriteria = inCriteria;
            Map<String, SmartTurn_InventoryItem.lookUpInventoryResponse_element> response_map_x = new Map<String, SmartTurn_InventoryItem.lookUpInventoryResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/inventory-item',
              'lookUpInventory',
              'http://www.smartturn.com/services/OccamService/inventory-item',
              'lookUpInventoryResponse',
              'SmartTurn_InventoryItem.lookUpInventoryResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.result;
        }
/*        public SmartTurn_OccamTypes.UploadResponse[] saveBusinessAffiliates(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_BATypes.WSBusinessAffiliate[] inBusinessAffiliates) {
            SmartTurn_BusinessAffiliate.saveBusinessAffiliates_element request_x = new SmartTurn_BusinessAffiliate.saveBusinessAffiliates_element();
            SmartTurn_BusinessAffiliate.saveBusinessAffiliatesResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.inBusinessAffiliates = inBusinessAffiliates;
            Map<String, SmartTurn_BusinessAffiliate.saveBusinessAffiliatesResponse_element> response_map_x = new Map<String, SmartTurn_BusinessAffiliate.saveBusinessAffiliatesResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/ba',
              'saveBusinessAffiliates',
              'http://www.smartturn.com/services/OccamService/ba',
              'saveBusinessAffiliatesResponse',
              'SmartTurn_BusinessAffiliate.saveBusinessAffiliatesResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.uploadResponse;
        }
        public SmartTurn_LookupTypes.WSBOLLookupResult lookUpBOLs(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_OccamTypes.Criteria inCriteria) {
            SmartTurn_BOL.lookupBOLs_element request_x = new SmartTurn_BOL.lookupBOLs_element();
            SmartTurn_BOL.lookupBOLsResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.inCriteria = inCriteria;
            Map<String, SmartTurn_BOL.lookupBOLsResponse_element> response_map_x = new Map<String, SmartTurn_BOL.lookupBOLsResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/bol',
              'lookupBOLs',
              'http://www.smartturn.com/services/OccamService/bol',
              'lookupBOLsResponse',
              'SmartTurn_BOL.lookupBOLsResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.result;
        }
        public SmartTurn_LookupTypes.WSActivityLinesLookupResult lookUpActivityLines(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_OccamTypes.Criteria inCriteria) {
            SmartTurn_ActivityLines.lookUpActivityLines_element request_x = new SmartTurn_ActivityLines.lookUpActivityLines_element();
            SmartTurn_ActivityLines.lookUpActivityLinesResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.inCriteria = inCriteria;
            Map<String, SmartTurn_ActivityLines.lookUpActivityLinesResponse_element> response_map_x = new Map<String, SmartTurn_ActivityLines.lookUpActivityLinesResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/activity-lines',
              'lookUpActivityLines',
              'http://www.smartturn.com/services/OccamService/activity-lines',
              'lookUpActivityLinesResponse',
              'SmartTurn_ActivityLines.lookUpActivityLinesResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.result;
        }
        public SmartTurn_LookupTypes.WSVoidedItemsLookupResult lookUpVoidedItems(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_OccamTypes.Criteria inCriteria) {
            SmartTurn_VoidedItems.lookUpVoidedItems_element request_x = new SmartTurn_VoidedItems.lookUpVoidedItems_element();
            SmartTurn_VoidedItems.lookUpVoidedItemsResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.inCriteria = inCriteria;
            Map<String, SmartTurn_VoidedItems.lookUpVoidedItemsResponse_element> response_map_x = new Map<String, SmartTurn_VoidedItems.lookUpVoidedItemsResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/voided-items',
              'lookUpVoidedItems',
              'http://www.smartturn.com/services/OccamService/voided-items',
              'lookUpVoidedItemsResponse',
              'SmartTurn_VoidedItems.lookUpVoidedItemsResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.result;
        }
        public SmartTurn_OccamTypes.UploadResponse cancelPurchaseOrder(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,String externalNumber,String number_x,String warehouseName) {
            SmartTurn_PurchaseOrder.cancelPurchaseOrder_element request_x = new SmartTurn_PurchaseOrder.cancelPurchaseOrder_element();
            SmartTurn_PurchaseOrder.cancelPurchaseOrderResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.externalNumber = externalNumber;
            request_x.number_x = number_x;
            request_x.warehouseName = warehouseName;
            Map<String, SmartTurn_PurchaseOrder.cancelPurchaseOrderResponse_element> response_map_x = new Map<String, SmartTurn_PurchaseOrder.cancelPurchaseOrderResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/purchase-order',
              'cancelPurchaseOrder',
              'http://www.smartturn.com/services/OccamService/purchase-order',
              'cancelPurchaseOrderResponse',
              'SmartTurn_PurchaseOrder.cancelPurchaseOrderResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.uploadResponse;
        }
        public SmartTurn_LookupTypes.AdjustmentsLookupResult lookUpAdjustments(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_OccamTypes.Criteria inCriteria) {
            SmartTurn_Adjustment.lookUpAdjustments_element request_x = new SmartTurn_Adjustment.lookUpAdjustments_element();
            SmartTurn_Adjustment.lookUpAdjustmentsResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.inCriteria = inCriteria;
            Map<String, SmartTurn_Adjustment.lookUpAdjustmentsResponse_element> response_map_x = new Map<String, SmartTurn_Adjustment.lookUpAdjustmentsResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/adjustment',
              'lookUpAdjustments',
              'http://www.smartturn.com/services/OccamService/adjustment',
              'lookUpAdjustmentsResponse',
              'SmartTurn_Adjustment.lookUpAdjustmentsResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.result;
        }
        public SmartTurn_OccamTypes.UploadResponse[] savePurchaseOrder(SmartTurn_OccamTypes.OccamPasswordCredential inCredential,SmartTurn_PurchaseOrderTypes.PurchaseOrder[] inPurchaseOrders) {
            SmartTurn_PurchaseOrder.savePurchaseOrder_element request_x = new SmartTurn_PurchaseOrder.savePurchaseOrder_element();
            SmartTurn_PurchaseOrder.savePurchaseOrderResponse_element response_x;
            request_x.inCredential = inCredential;
            request_x.inPurchaseOrders = inPurchaseOrders;
            Map<String, SmartTurn_PurchaseOrder.savePurchaseOrderResponse_element> response_map_x = new Map<String, SmartTurn_PurchaseOrder.savePurchaseOrderResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '',
              'http://www.smartturn.com/services/OccamService/purchase-order',
              'savePurchaseOrder',
              'http://www.smartturn.com/services/OccamService/purchase-order',
              'savePurchaseOrderResponse',
              'SmartTurn_PurchaseOrder.savePurchaseOrderResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.uploadResponse;
        } */
    }
}